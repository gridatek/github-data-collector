name: Manual GitHub Data Collection

on:
  workflow_dispatch:
    inputs:
      single_organization:
        description: 'Single organization to collect data from'
        required: false
        default: ''
      custom_date:
        description: 'Custom date for collection (YYYY-MM-DD)'
        required: false
        default: ''
      skip_contributions:
        description: 'Skip contribution data collection'
        required: false
        default: false
        type: boolean
      debug_mode:
        description: 'Enable debug output'
        required: false
        default: false
        type: boolean

jobs:
  manual-collection:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-github-action.txt

    - name: Set collection parameters
      id: params
      run: |
        if [ -n "${{ github.event.inputs.single_organization }}" ]; then
          echo "organizations=${{ github.event.inputs.single_organization }}" >> $GITHUB_OUTPUT
        else
          echo "organizations=apache,kubernetes,tensorflow" >> $GITHUB_OUTPUT
        fi

        if [ -n "${{ github.event.inputs.custom_date }}" ]; then
          echo "date=${{ github.event.inputs.custom_date }}" >> $GITHUB_OUTPUT
        else
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        fi

        echo "debug=${{ github.event.inputs.debug_mode }}" >> $GITHUB_OUTPUT

    - name: Create output directory
      run: mkdir -p output

    - name: Collect repository data (Debug Mode)
      if: steps.params.outputs.debug == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "🐛 DEBUG MODE: Collecting data for ${{ steps.params.outputs.organizations }}"
        python -u src/collect_repo_data.py \
          --organizations "${{ steps.params.outputs.organizations }}" \
          --max-repos 10 \
          --output-dir output \
          --date ${{ steps.params.outputs.date }}

    - name: Collect repository data (Normal Mode)
      if: steps.params.outputs.debug != 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python src/collect_repo_data.py \
          --organizations "${{ steps.params.outputs.organizations }}" \
          --max-repos 100 \
          --output-dir output \
          --date ${{ steps.params.outputs.date }}

    - name: Collect contribution data
      if: github.event.inputs.skip_contributions != 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python src/collect_contribution_data.py \
          --input-file output/repos_raw_${{ steps.params.outputs.date }}.json \
          --output-dir output \
          --date ${{ steps.params.outputs.date }} \
          --max-repos 20

    - name: Generate summary
      run: |
        CONTRIB_FILE=""
        if [ "${{ github.event.inputs.skip_contributions }}" != "true" ]; then
          CONTRIB_FILE="--contrib-file output/contributions_${{ steps.params.outputs.date }}.json"
        fi

        python src/generate_summary.py \
          --repo-file output/repos_raw_${{ steps.params.outputs.date }}.json \
          $CONTRIB_FILE \
          --output-file output/github_summary_${{ steps.params.outputs.date }}.json

#    - name: Display results
#      run: |
#        echo "=== 📊 Collection Results ==="
#        ls -la output/
#        echo ""
#        echo "=== 📈 Summary Statistics ==="
#        if [ -f "output/github_summary_${{ steps.params.outputs.date }}.json" ]; then
#          python -c "
#import json
#with open('output/github_summary_${{ steps.params.outputs.date }}.json', 'r') as f:
#    data = json.load(f)
#    print(f\"🏢 Organizations: {data['collection_metadata']['total_organizations']}\")
#    print(f\"📚 Repositories: {data['collection_metadata']['total_repositories']:,}\")
#    print(f\"⭐ Total Stars: {data['repository_statistics']['total_stars']:,}\")
#    print(f\"🔀 Total Forks: {data['repository_statistics']['total_forks']:,}\")
#    if 'contribution_analysis' in data:
#        print(f\"👥 Contributors: {data['contribution_analysis']['total_contributors']:,}\")
#"
#        fi

    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: manual-collection-${{ steps.params.outputs.date }}
        path: output/*.json
        retention-days: 90
